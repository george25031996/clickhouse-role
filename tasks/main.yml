---
# tasks file for clickhouse-role
- block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
  rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
          check_mode: false
        - name: Install clickhouse packages
          become: true
          ansible.builtin.yum:
            name:
              - clickhouse-common-static-{{ clickhouse_version }}.rpm
              - clickhouse-client-{{ clickhouse_version }}.rpm
              - clickhouse-server-{{ clickhouse_version }}.rpm
          notify: Start clickhouse service
        - name: Deploy config clickhouse
          become: true
          ansible.builtin.template:
            src: clickhouse.config.j2
            dest: "{{ clickhouse_config_path }}"
            mode: 0644
            owner: "{{ ansible_user_id }}"
            group: "{{ ansible_user_gid }}"
        - name: Deploy users config clickhouse
          become: true
          ansible.builtin.template:
            src: clickhouse.users.j2
            dest: "{{ clickhouse_users_path }}"
            mode: 0644
            owner: "{{ ansible_user_id }}"
            group: "{{ ansible_user_gid }}"
        - name: Flush handlers
          ansible.builtin.meta: flush_handlers
        - name: Create database
          ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
          register: create_db
          failed_when: create_db.rc !=0 and create_db.rc !=82
          changed_when: create_db.rc == 0
        - name: Create table for logs
          ansible.builtin.command: clickhouse-client -q
                        'CREATE TABLE IF NOT EXISTS  logs.vector_internal_logs (
                            message String
                        )
                        ENGINE = MergeTree()
                        ORDER BY tuple();'
          register: create_table